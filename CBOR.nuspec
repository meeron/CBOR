<?xml version="1.0" encoding="utf-8"?>
<package>
  <metadata>
    <id>PeterO.Cbor</id>
    <version>2.4.0</version>
    <title>CBOR</title>
    <authors>Peter Occil</authors>
    <owners>Peter Occil</owners>
    <licenseUrl>http://creativecommons.org/publicdomain/zero/1.0/</licenseUrl>
    <projectUrl>https://github.com/peteroupc/CBOR</projectUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description>
    A C# implementation of Concise Binary Object Representation (CBOR), a general-purpose binary data format defined in RFC 7049. According to that RFC, CBOR's data model "is an extended version of the JSON data model", supporting many more types of data than JSON. This implementation was written by Peter O. and is released to the Public Domain under the CC0 Declaration.
    This implementation also doubles as a reader and writer of JSON, and can convert data from JSON to CBOR and back.
    </description>
    <summary>A C# implementation of Concise Binary Object Representation (CBOR), a data serialization format. This implementation can also convert between CBOR and JSON.</summary>
    <releaseNotes>
In version 2.4:
* The arbitrary-precision classes in this library are being replaced
 with a new library (called PeterO.Numbers (https://www.nuget.org/packages/PeterO.Numbers) in C#).  As a result, most
 of the methods in the existing classes are obsolete.  This affects the
 classes `BigInteger`, `ExtendedDecimal`, `ExtendedFloat`, `ExtendedRational`,
 `Rounding`, `PrecisionContext`, and `TrapException`.  Changes were made
 to those classes to call the new classes, and the behavior is mostly
 compatible with the previous behavior (with the notable exception
 of a new dependency in the CBOR library).
* After version 2.3.1, the classes in the new library were greatly changed
 from what they were in version 2.3.1.  Version 2.4.0 currently uses
 version 0.2 of the new library, but this may change in future versions.  See the
  new library's release notes (https://github.com/peteroupc/Numbers),
 and this repository's commit history (from "version 2.3.1"
 to "move big number library...") for details.
* The FromObject method of the CBORObject class can now convert
 arbitrary-precision number objects from the new library
 appropriately, such as `EInteger` and `EDecimal`.  However, there are
 no methods that directly take or return one of those classes, for
 compatibility with version 2.0.
* Added Zero field and IsNegative property to the CBORObject class
* Added overloads to ReadJSON and FromJSONString in CBORObject class
* Added parameter in the ParseJSONNumber method of CBORDataUtilities
 to preserve negative zeros
* Added CBOR decoding option to disable duplicate keys
* Fixed JSON parsing bugs
See the project page for release notes on previous versions: https://github.com/peteroupc/CBOR
    </releaseNotes>
    <copyright>Written by Peter O. in 2013-2015.  Any copyright is released to the Public Domain.</copyright>
    <tags>cbor data serialization binary json numbers arithmetic</tags>
   <dependencies>
   <group>
      <dependency id="PeterO.Numbers" version="0.2.0" />
   </group>
  </dependencies>
  </metadata>

  <files>
    <file src="bin/Release/CBOR.dll" target="lib/portable-net45+dnxcore50+netcore45+win+wpa81+wp80" />
    <file src="bin/Release/CBOR.xml" target="lib/portable-net45+dnxcore50+netcore45+win+wpa81+wp80" />
    <file src="bin/ReleaseNet40/CBOR.dll" target="lib/portable-net40+sl50+win+wpa81+wp80" />
    <file src="bin/ReleaseNet40/CBOR.xml" target="lib/portable-net40+sl50+win+wpa81+wp80" />
  </files>
</package>
